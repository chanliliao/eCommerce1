[{"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\index.js":"1","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\App.js":"2","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Header.js":"3","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\screens\\HomeScreen.js":"5","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Product.js":"6","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Rating.js":"7","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\store.js":"9","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\reducers\\productReducers.js":"10","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\reducers\\index.js":"11","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\constants\\productTypes.js":"12","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\actions\\productAction.js":"13","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Loader.js":"14","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Message.js":"15","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\screens\\CartScreen.js":"16","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\reducers\\cartReducers.js":"17","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\constants\\cartTypes.js":"18","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\actions\\cartAction.js":"19"},{"size":249,"mtime":1610078103001,"results":"20","hashOfConfig":"21"},{"size":975,"mtime":1610421588247,"results":"22","hashOfConfig":"21"},{"size":1092,"mtime":1609625708805,"results":"23","hashOfConfig":"21"},{"size":392,"mtime":1609619923609,"results":"24","hashOfConfig":"21"},{"size":1213,"mtime":1610414498350,"results":"25","hashOfConfig":"21"},{"size":850,"mtime":1610346638254,"results":"26","hashOfConfig":"21"},{"size":1808,"mtime":1609624210362,"results":"27","hashOfConfig":"21"},{"size":4014,"mtime":1610424189743,"results":"28","hashOfConfig":"21"},{"size":588,"mtime":1610422866693,"results":"29","hashOfConfig":"21"},{"size":1159,"mtime":1610416105736,"results":"30","hashOfConfig":"21"},{"size":233,"mtime":1610421845376,"results":"31","hashOfConfig":"21"},{"size":366,"mtime":1610413825803,"results":"32","hashOfConfig":"21"},{"size":1171,"mtime":1610424500369,"results":"33","hashOfConfig":"21"},{"size":411,"mtime":1610337979125,"results":"34","hashOfConfig":"21"},{"size":256,"mtime":1610338108486,"results":"35","hashOfConfig":"21"},{"size":3942,"mtime":1610510503916,"results":"36","hashOfConfig":"21"},{"size":868,"mtime":1610510618529,"results":"37","hashOfConfig":"21"},{"size":100,"mtime":1610421764672,"results":"38","hashOfConfig":"21"},{"size":778,"mtime":1610510358548,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"cl8cb",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\index.js",[],["85","86"],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\App.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Header.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\screens\\HomeScreen.js",["87"],"import React, { Fragment, useEffect } from 'react';\r\nimport Product from '../components/Product';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { listProducts } from '../actions/productAction';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HomeScreen = ({ listProducts, list: { products, loading, error } }) => {\r\n  useEffect(() => {\r\n    listProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nHomeScreen.propType = {\r\n  listProducts: PropTypes.func.isRequired,\r\n\r\n  products: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: state.productList,\r\n});\r\n\r\nexport default connect(mapStateToProps, { listProducts })(HomeScreen);\r\n","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Product.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\screens\\ProductScreen.js",["88"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getSingleProduct } from '../actions/productAction';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProductScreen = ({\r\n  match,\r\n  history,\r\n  getSingleProduct,\r\n  singleProduct: { product, error, loading },\r\n}) => {\r\n  const [qty, setQty] = useState(1);\r\n\r\n  useEffect(() => {\r\n    getSingleProduct(match.params.id);\r\n  }, [match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const {\r\n    image,\r\n    name,\r\n    rating,\r\n    numReviews,\r\n    price,\r\n    description,\r\n    countInStock,\r\n  } = product;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={image} alt={name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h3>{name}</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating value={rating} text={`${numReviews} reviews`} />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>Price: ${price}</ListGroup.Item>\r\n              <ListGroup.Item>Description: {description}</ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong>${price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>{countInStock > 0 ? 'In Stock' : 'Out Of Stock'}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as='select'\r\n                          style={{ width: 'unset' }}\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    className='btn-block'\r\n                    type='button'\r\n                    disabled={countInStock === 0}\r\n                    onClick={addToCartHandler}\r\n                  >\r\n                    Add To Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductScreen.propType = {\r\n  getSingleProduct: PropTypes.func.isRequired,\r\n  singleProduct: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  singleProduct: state.productList,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getSingleProduct })(ProductScreen);\r\n","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\store.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\reducers\\productReducers.js",["89"],"import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  SINGLE_PRODUCT_REQUEST,\r\n  SINGLE_PRODUCT_SUCCESS,\r\n  SINGLE_PRODUCT_FAIL,\r\n} from '../constants/productTypes';\r\n\r\nconst initialState = {\r\n  products: [],\r\n  product: {\r\n    reviews: [],\r\n  },\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { ...state, products: [], loading: true };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n        loading: false,\r\n      };\r\n    case PRODUCT_LIST_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    case SINGLE_PRODUCT_REQUEST:\r\n      return { ...state, product: {}, loading: true };\r\n    case SINGLE_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        product: action.payload,\r\n        loading: false,\r\n      };\r\n    case SINGLE_PRODUCT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",["90","91"],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\constants\\productTypes.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\actions\\productAction.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\components\\Message.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\screens\\CartScreen.js",["92"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport { addToCart, removeFromCart } from '../actions/cartAction';\r\nimport PropTypes from 'prop-types';\r\nimport Message from '../components/Message';\r\n\r\nconst CartScreen = ({\r\n  match,\r\n  location,\r\n  history,\r\n  addToCart,\r\n  removeFromCart,\r\n  cart: { cartItems },\r\n}) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      addToCart(productId, qty);\r\n    }\r\n  }, [productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    console.log(id);\r\n    removeFromCart(id);\r\n  };\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping');\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      style={{ width: 'unset' }}\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        addToCart(item.product, Number(e.target.value))\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)\r\n                .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n      <Col md={2}></Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nCartScreen.propType = {\r\n  addToCart: PropTypes.func.isRequired,\r\n  removeFromCart: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  cart: state.cart,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addToCart, removeFromCart })(\r\n  CartScreen\r\n);\r\n","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\reducers\\cartReducers.js",["93"],"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartTypes';\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\constants\\cartTypes.js",[],"C:\\Users\\cliao\\Desktop\\Coding\\eCommercePayPal\\frontend\\src\\actions\\cartAction.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":13,"column":6,"nodeType":"100","endLine":13,"endColumn":8,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":29,"column":6,"nodeType":"100","endLine":29,"endColumn":13,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":19,"column":1,"nodeType":"106","endLine":52,"endColumn":3},{"ruleId":"94","replacedBy":"107"},{"ruleId":"96","replacedBy":"108"},{"ruleId":"98","severity":1,"message":"109","line":33,"column":6,"nodeType":"100","endLine":33,"endColumn":22,"suggestions":"110"},{"ruleId":"104","severity":1,"message":"105","line":7,"column":1,"nodeType":"106","endLine":35,"endColumn":3},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listProducts'. Either include it or remove the dependency array. If 'listProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'getSingleProduct'. Either include it or remove the dependency array. If 'getSingleProduct' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["114"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["111"],["112"],"React Hook useEffect has a missing dependency: 'addToCart'. Either include it or remove the dependency array. If 'addToCart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [listProducts]",{"range":"122","text":"123"},"Update the dependencies array to be: [getSingleProduct, match]",{"range":"124","text":"125"},"Update the dependencies array to be: [addToCart, productId, qty]",{"range":"126","text":"127"},[498,500],"[listProducts]",[717,724],"[getSingleProduct, match]",[715,731],"[addToCart, productId, qty]"]